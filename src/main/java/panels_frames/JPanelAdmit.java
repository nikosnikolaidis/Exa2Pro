/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels_frames;

import admit.AdmitProject;
import admit.Decision;
import admit.Equation;
import admit.ModelParameter;
import exa2pro.LineChartAdmit;
import exa2pro.Project;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultListSelectionModel;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nikos
 */
public class JPanelAdmit extends javax.swing.JPanel {

    Project project;
    AdmitProject admitProject;
    ArrayList<ModelParameter> allModels = new ArrayList<>();
    private List<PanelAdmitModelValueInput> modelsPanels= new ArrayList<>();
    
    /**
     * Creates new form JPanelAdmit
     */
    public JPanelAdmit(Project project) {
        this.project = project;
        admitProject = project.getCredentials().getAdmitProject();

        initComponents();

        jTableAllModels.setSelectionModel(new ForcedListSelectionModel());
        jTableDecisions.setSelectionModel(new ForcedListSelectionModel());
        jTableModels.setSelectionModel(new ForcedListSelectionModel());
        
        
        getAllModels();
        addRowsInDecisionTable();
        
        jPanelNewDecision.setVisible(false);
        jPanelModels.setVisible(false);
        jPanelCreateCustom.setVisible(false);
        jPanelProvideV.setVisible(false);
        jPanelResults.setVisible(false);
        
        //costomizations
        jTableModels.getColumnModel().getColumn(0).setMaxWidth(50);
        jTableModels.getColumnModel().getColumn(1).setMaxWidth(200);
        jTableAllModels.getColumnModel().getColumn(0).setMaxWidth(50);
        jTableAllModels.getColumnModel().getColumn(1).setMaxWidth(200);
        jTableResultCostModel.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTableResultCostModel.getColumnModel().getColumn(1).setMaxWidth(80);
        jTableResultBenefitModel.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTableResultBenefitModel.getColumnModel().getColumn(1).setMaxWidth(80);
    }
    
    private void getAllModels(){
        allModels.clear();
        try (BufferedReader br = new BufferedReader(new FileReader("myModels.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
            	if(!line.equals("")) {
	                String[] lineT= line.split(";");
	                String name= lineT[0];
	                String type= lineT[1];
	                String equation= lineT[2];
	                allModels.add(new ModelParameter(name, type, new Equation(equation)));
            	}
            }
        } catch (IOException ex) {
            System.out.println("JPanelAdmit.getAllModels");
        }
    }
    private void saveNewModel(ModelParameter model){
        try {
            BufferedWriter writer = new BufferedWriter(new FileWriter("myModels.txt"));
            for(ModelParameter m:allModels) {
            	writer.append(m.getName() +";"+ m.getType() +";"+ m.getEquation()+ System.lineSeparator());
            }
            writer.append(model.getName() +";"+ model.getType() +";"+ model.getEquation()+ System.lineSeparator());
            writer.close();
        } catch (IOException ex) {
            System.out.println("JPanelAdmit.saveNewModel");
        }
    }
    
    private void addRowsInDecisionTable(){
        DefaultTableModel model = (DefaultTableModel) jTableDecisions.getModel();
        removeAllRowsTable(jTableAllModels);
        admitProject.getDecisions().forEach((d) -> {
            model.addRow(new Object[]{d.getName(), d.getDate()});
        });
    }
    
    private void addRowsInAllModelTable(String modelType){
        DefaultTableModel model = (DefaultTableModel) jTableAllModels.getModel();
        removeAllRowsTable(jTableAllModels);
        allModels.forEach((m) -> {
            if(modelType.equals(m.getType()))
                model.addRow(new Object[]{m.getType(), m.getName(), m.getEquation().toString()});
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableModels = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDecisions = new javax.swing.JTable();
        jButtonNewDecision = new javax.swing.JButton();
        jButtonAddCost = new javax.swing.JButton();
        jButtonAddBenefit = new javax.swing.JButton();
        jButtonAnalysis = new javax.swing.JButton();
        jPanelNewDecision = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextDate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButtonCreateDecision = new javax.swing.JButton();
        jPanelModels = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableAllModels = new javax.swing.JTable();
        jButtonCreateModel = new javax.swing.JButton();
        jPanelCreateCustom = new javax.swing.JPanel();
        jButtonCreateCustomModel = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxCustomType = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldCustomName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTextFieldVar = new javax.swing.JTextField();
        jButtonCustomParamAdd = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jComboBoxSymbol = new javax.swing.JComboBox<>();
        jButtonCustomSymbAdd = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaEq = new javax.swing.JTextArea();
        jPanelProvideV = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jButtonAnalyze = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jPanelModelsInputs = new javax.swing.JPanel();
        jPanelResults = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabelTotalBenefits = new javax.swing.JLabel();
        jLabelTotalCosts = new javax.swing.JLabel();
        jLabelProfitLoss = new javax.swing.JLabel();
        jComboBoxParameters = new javax.swing.JComboBox<>();
        jTextFieldMinV = new javax.swing.JTextField();
        jTextFieldMaxV = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jButtonTune = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTableTotalBC = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableResultBenefitModel = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableResultCostModel = new javax.swing.JTable();
        jPanelChart = new javax.swing.JPanel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jTableModels.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Name", "Equation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableModels.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jTableModelsMouseMoved(evt);
            }
        });
        jTableModels.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableModelsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableModels);

        jTableDecisions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDecisions.setToolTipText("");
        jTableDecisions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDecisionsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableDecisions);

        jButtonNewDecision.setText("Create New Decision");
        jButtonNewDecision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewDecisionActionPerformed(evt);
            }
        });

        jButtonAddCost.setText("Add Cost Model");
        jButtonAddCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddCostActionPerformed(evt);
            }
        });

        jButtonAddBenefit.setText("Add Benefit Model");
        jButtonAddBenefit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddBenefitActionPerformed(evt);
            }
        });

        jButtonAnalysis.setText("Perform Analysis");
        jButtonAnalysis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnalysisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonAddCost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAddBenefit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAnalysis))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonNewDecision)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonNewDecision)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddCost)
                    .addComponent(jButtonAddBenefit)
                    .addComponent(jButtonAnalysis))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel1);

        jLabel2.setText("Name of Decision");

        jLabel4.setText("Date");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Create Decision");

        jButtonCreateDecision.setText("Create");
        jButtonCreateDecision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateDecisionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonCreateDecision))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextDate)
                            .addComponent(jTextName))))
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jButtonCreateDecision)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelNewDecisionLayout = new javax.swing.GroupLayout(jPanelNewDecision);
        jPanelNewDecision.setLayout(jPanelNewDecisionLayout);
        jPanelNewDecisionLayout.setHorizontalGroup(
            jPanelNewDecisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNewDecisionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelNewDecisionLayout.setVerticalGroup(
            jPanelNewDecisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNewDecisionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(380, Short.MAX_VALUE))
        );

        add(jPanelNewDecision);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Select an existing model, or add a custom one");

        jTableAllModels.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Name", "Equation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAllModels.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jTableAllModelsMouseMoved(evt);
            }
        });
        jTableAllModels.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAllModelsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableAllModels);

        jButtonCreateModel.setText("Create Custom Model");
        jButtonCreateModel.setToolTipText("");
        jButtonCreateModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateModelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelModelsLayout = new javax.swing.GroupLayout(jPanelModels);
        jPanelModels.setLayout(jPanelModelsLayout);
        jPanelModelsLayout.setHorizontalGroup(
            jPanelModelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelModelsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelModelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanelModelsLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModelsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonCreateModel)))
                .addContainerGap())
        );
        jPanelModelsLayout.setVerticalGroup(
            jPanelModelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelModelsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCreateModel)
                .addContainerGap())
        );

        add(jPanelModels);

        jButtonCreateCustomModel.setText("Create");
        jButtonCreateCustomModel.setToolTipText("");
        jButtonCreateCustomModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateCustomModelActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Create a Custom Model");

        jLabel7.setText(" Type:");

        jComboBoxCustomType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cost", "Benefit" }));

        jLabel8.setText("Model Name");

        jLabel10.setText("Equation builder:");

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButtonCustomParamAdd.setText("Add");
        jButtonCustomParamAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCustomParamAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldVar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jButtonCustomParamAdd)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCustomParamAdd))
                .addGap(3, 3, 3))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jComboBoxSymbol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "+", "-", "*", "/", "(", ")" }));

        jButtonCustomSymbAdd.setText("Add");
        jButtonCustomSymbAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCustomSymbAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBoxSymbol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonCustomSymbAdd)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxSymbol, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCustomSymbAdd))
                .addGap(3, 3, 3))
        );

        jButtonDelete.setText("Delete Last");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jTextAreaEq.setEditable(false);
        jTextAreaEq.setColumns(20);
        jTextAreaEq.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextAreaEq.setLineWrap(true);
        jTextAreaEq.setRows(3);
        jScrollPane4.setViewportView(jTextAreaEq);

        javax.swing.GroupLayout jPanelCreateCustomLayout = new javax.swing.GroupLayout(jPanelCreateCustom);
        jPanelCreateCustom.setLayout(jPanelCreateCustomLayout);
        jPanelCreateCustomLayout.setHorizontalGroup(
            jPanelCreateCustomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreateCustomLayout.createSequentialGroup()
                .addGroup(jPanelCreateCustomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCreateCustomLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelCreateCustomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelCreateCustomLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButtonCreateCustomModel))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelCreateCustomLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxCustomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelCreateCustomLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanelCreateCustomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelCreateCustomLayout.createSequentialGroup()
                                .addGroup(jPanelCreateCustomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(jPanelCreateCustomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanelCreateCustomLayout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextFieldCustomName, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 35, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCreateCustomLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonDelete)))
                .addContainerGap())
        );
        jPanelCreateCustomLayout.setVerticalGroup(
            jPanelCreateCustomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreateCustomLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelCreateCustomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBoxCustomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanelCreateCustomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldCustomName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE)
                .addComponent(jButtonCreateCustomModel)
                .addContainerGap())
        );

        add(jPanelCreateCustom);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Provide the values for the models' parameters");

        jButtonAnalyze.setText("Analyze!");
        jButtonAnalyze.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnalyzeActionPerformed(evt);
            }
        });

        jPanelModelsInputs.setLayout(new java.awt.GridLayout(0, 1));
        jScrollPane8.setViewportView(jPanelModelsInputs);

        javax.swing.GroupLayout jPanelProvideVLayout = new javax.swing.GroupLayout(jPanelProvideV);
        jPanelProvideV.setLayout(jPanelProvideVLayout);
        jPanelProvideVLayout.setHorizontalGroup(
            jPanelProvideVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProvideVLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelProvideVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
                    .addGroup(jPanelProvideVLayout.createSequentialGroup()
                        .addGroup(jPanelProvideVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jButtonAnalyze))
                        .addGap(0, 275, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelProvideVLayout.setVerticalGroup(
            jPanelProvideVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProvideVLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAnalyze)
                .addContainerGap())
        );

        add(jPanelProvideV);

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel36.setText("Provide the values for the models' parameters");

        jLabel45.setText("Select Parameter to Tune the Model:");

        jLabelTotalBenefits.setText("Total Benefits: 0.00$");

        jLabelTotalCosts.setText("Total Costs: 0.00$");

        jLabelProfitLoss.setText("Profit/Loss: 0.00$");

        jComboBoxParameters.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));

        jTextFieldMinV.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldMinV.setText("0");

        jTextFieldMaxV.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldMaxV.setText("0");

        jLabel37.setText("Min value");

        jLabel38.setText("Max value");

        jButtonTune.setText("Tune Model");
        jButtonTune.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTuneActionPerformed(evt);
            }
        });

        jTableTotalBC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Total Benefit", "Total Cost", "Profit/Loss"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(jTableTotalBC);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        jTableResultBenefitModel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Benefit Model", "Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTableResultBenefitModel);

        jPanel5.add(jScrollPane6);

        jTableResultCostModel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cost Model", "Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTableResultCostModel);

        jPanel5.add(jScrollPane5);

        javax.swing.GroupLayout jPanelChartLayout = new javax.swing.GroupLayout(jPanelChart);
        jPanelChart.setLayout(jPanelChartLayout);
        jPanelChartLayout.setHorizontalGroup(
            jPanelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelChartLayout.setVerticalGroup(
            jPanelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanelResultsLayout = new javax.swing.GroupLayout(jPanelResults);
        jPanelResults.setLayout(jPanelResultsLayout);
        jPanelResultsLayout.setHorizontalGroup(
            jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanelResultsLayout.createSequentialGroup()
                        .addGroup(jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel45)
                            .addGroup(jPanelResultsLayout.createSequentialGroup()
                                .addComponent(jLabelTotalCosts)
                                .addGap(40, 40, 40)
                                .addComponent(jLabelTotalBenefits)
                                .addGap(40, 40, 40)
                                .addComponent(jLabelProfitLoss))
                            .addGroup(jPanelResultsLayout.createSequentialGroup()
                                .addComponent(jComboBoxParameters, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel37)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldMinV, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldMaxV, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonTune))
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 188, Short.MAX_VALUE))
                    .addGroup(jPanelResultsLayout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanelChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelResultsLayout.setVerticalGroup(
            jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResultsLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTotalCosts)
                    .addComponent(jLabelProfitLoss)
                    .addComponent(jLabelTotalBenefits))
                .addGap(22, 22, 22)
                .addComponent(jLabel45)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxParameters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37)
                    .addComponent(jTextFieldMinV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38)
                    .addComponent(jTextFieldMaxV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonTune))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelResultsLayout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 68, Short.MAX_VALUE))
                    .addComponent(jPanelChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        add(jPanelResults);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNewDecisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewDecisionActionPerformed
        jPanelNewDecision.setVisible(true);
        jPanelModels.setVisible(false);
        jPanelCreateCustom.setVisible(false);
        jPanelProvideV.setVisible(false);
        jPanelResults.setVisible(false);
        
        SimpleDateFormat formatter = new SimpleDateFormat("dd - MM - yyyy");  
        Date date = new Date();
        jTextDate.setText(formatter.format(date));
    }//GEN-LAST:event_jButtonNewDecisionActionPerformed

    private void jButtonAddCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddCostActionPerformed
        jPanelNewDecision.setVisible(false);
        jPanelModels.setVisible(true);
        jPanelCreateCustom.setVisible(false);
        jPanelProvideV.setVisible(false);
        jPanelResults.setVisible(false);
        
        //populate table with cost models
        addRowsInAllModelTable("Cost");
    }//GEN-LAST:event_jButtonAddCostActionPerformed

    private void jButtonAddBenefitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddBenefitActionPerformed
        jPanelNewDecision.setVisible(false);
        jPanelModels.setVisible(true);
        jPanelCreateCustom.setVisible(false);
        jPanelProvideV.setVisible(false);
        jPanelResults.setVisible(false);
        
        //populate table with benefit models
        addRowsInAllModelTable("Benefit");
    }//GEN-LAST:event_jButtonAddBenefitActionPerformed

    private void jButtonAnalysisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnalysisActionPerformed
        if(jTableDecisions.getSelectedRow() != -1 && jTableModels.getModel().getRowCount() !=0){
            jPanelModelsInputs.removeAll();
            
            jPanelNewDecision.setVisible(false);
            jPanelModels.setVisible(false);
            jPanelCreateCustom.setVisible(false);
            jPanelProvideV.setVisible(true);
            jPanelResults.setVisible(false);
            
            Decision decision= admitProject.findDecision(jTableDecisions.getModel().getValueAt(jTableDecisions.getSelectedRow(), 0).toString());
            decision.removeAllModels();
            
            for(int i=0; i<jTableModels.getModel().getRowCount(); i++){
                String type= jTableModels.getModel().getValueAt(i, 0).toString();
                String name= jTableModels.getModel().getValueAt(i, 1).toString();
                Equation equation= new Equation(jTableModels.getModel().getValueAt(i, 2).toString());
                ModelParameter model= new ModelParameter(name, admitProject.getName(), decision.getName(), type, equation);
                decision.addModel(model);
                
                PanelAdmitModelValueInput p = new PanelAdmitModelValueInput(model);
                modelsPanels.add(p);
                jPanelModelsInputs.add(p);
            }
            
            jPanelModelsInputs.repaint();
            jPanelModelsInputs.revalidate();
        }
    }//GEN-LAST:event_jButtonAnalysisActionPerformed

    private void jButtonCreateModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateModelActionPerformed
        jPanelNewDecision.setVisible(false);
        jPanelModels.setVisible(false);
        jPanelCreateCustom.setVisible(true);
        jPanelProvideV.setVisible(false);
        jPanelResults.setVisible(false);
    }//GEN-LAST:event_jButtonCreateModelActionPerformed

    private void jButtonAnalyzeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnalyzeActionPerformed
        jPanelNewDecision.setVisible(false);
        jPanelModels.setVisible(false);
        jPanelCreateCustom.setVisible(false);
        jPanelProvideV.setVisible(false);
        jPanelResults.setVisible(true);
        
        //remove previous
        removeAllRowsTable(jTableResultBenefitModel);
        removeAllRowsTable(jTableResultCostModel);
        //if(jComboBoxParameters.getItemCount()!=0)
        jComboBoxParameters.removeAllItems();
        jTextFieldMinV.setText("0");
        jTextFieldMaxV.setText("0");
        removeAllRowsTable(jTableTotalBC);
        
        //save to file
        Project.saveToFile();
        
        //get variable values
        for(PanelAdmitModelValueInput p: modelsPanels){
            for(PanelAdmitModelEachVariable p2: p.variablesPanels){
                p.getModelParameter().getEquation().putParameterWeight(p2.getName(), p2.getValue());
            }
        }
        
        //calculate models
        Decision decision= admitProject.findDecision(jTableDecisions.getModel().getValueAt(jTableDecisions.getSelectedRow(), 0).toString());
        DefaultTableModel tableCostModel = (DefaultTableModel) jTableResultCostModel.getModel();
        DefaultTableModel tableBenefitModel = (DefaultTableModel) jTableResultBenefitModel.getModel();
        double totalCost=0;
        double totalBenefit=0;
        ArrayList<String> param= new ArrayList<>();
        for(ModelParameter model: decision.getModels()){
            double result= model.getEquation().computeEquation();
            if(model.getType().equals("Cost")){
                tableCostModel.addRow(new Object[]{model.getName(), result});
                totalCost+= result;
            }
            else{
                tableBenefitModel.addRow(new Object[]{model.getName(), result});
                totalBenefit+= result;
            }
            
            //add uniqe paramrters to add to box
            model.getEquation().getParameters().keySet().stream().filter((key) -> (!param.contains(key)))
                    .forEachOrdered((key) -> { param.add(key); });
        }
        
        //populate box for selecting parameter
        param.forEach((key) -> {
            jComboBoxParameters.addItem(key);
        });
        
        //populate labels with totals
        totalCost = -totalCost;
        jLabelTotalCosts.setText("Total Costs: "+ totalCost +"$");
        jLabelTotalBenefits.setText("Total Benefits: "+ totalBenefit +"$");
        jLabelProfitLoss.setText("Profit/Loss: "+ (totalCost+totalBenefit) +"$");
    }//GEN-LAST:event_jButtonAnalyzeActionPerformed

    private void jButtonCustomParamAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCustomParamAddActionPerformed
        String var= jTextFieldVar.getText().replaceAll(" ", "_");
        if(jTextAreaEq.getText().equals(""))
            jTextAreaEq.setText(var);
        else
            jTextAreaEq.setText(jTextAreaEq.getText() +" "+ var);
    }//GEN-LAST:event_jButtonCustomParamAddActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        String eq= jTextAreaEq.getText();
        String[] list= jTextAreaEq.getText().split(" ");
        jTextAreaEq.setText((replaceLast(eq, list[list.length-1], "")).trim());
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonCustomSymbAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCustomSymbAddActionPerformed
        String sym= jComboBoxSymbol.getSelectedItem().toString();
        jTextAreaEq.setText(jTextAreaEq.getText() +" "+ sym);
    }//GEN-LAST:event_jButtonCustomSymbAddActionPerformed

    private void jButtonCreateDecisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateDecisionActionPerformed
        String decisionName= jTextName.getText();
        String date= jTextDate.getText();
        Decision decision= new Decision(decisionName, admitProject, date);
        admitProject.addDecision(decision);
        
        addRowsInDecisionTable();
    }//GEN-LAST:event_jButtonCreateDecisionActionPerformed

    private void jButtonCreateCustomModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateCustomModelActionPerformed
        String type= jComboBoxCustomType.getSelectedItem().toString();
        String name= jTextFieldCustomName.getText();
        String equation= jTextAreaEq.getText();
        ModelParameter model = new ModelParameter(name, type, new Equation(equation));
        
        saveNewModel(model);
        getAllModels();
        
        //Show all Models
        jPanelNewDecision.setVisible(false);
        jPanelModels.setVisible(true);
        jPanelCreateCustom.setVisible(false);
        jPanelProvideV.setVisible(false);
        jPanelResults.setVisible(false);
        addRowsInAllModelTable(type);
    }//GEN-LAST:event_jButtonCreateCustomModelActionPerformed

    private void jTableAllModelsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAllModelsMouseClicked
        String type= jTableAllModels.getValueAt(jTableAllModels.getSelectedRow(), 0).toString();
        String name= jTableAllModels.getValueAt(jTableAllModels.getSelectedRow(), 1).toString();
        String eq= jTableAllModels.getValueAt(jTableAllModels.getSelectedRow(), 2).toString();
        DefaultTableModel model = (DefaultTableModel) jTableModels.getModel();
        
        boolean found=false;
        for(int i=0; i<jTableModels.getModel().getRowCount(); i++){
            if(jTableModels.getModel().getValueAt(i, 2).toString().equals(eq) && 
                    jTableModels.getModel().getValueAt(i, 1).toString().equals(name) && 
                    jTableModels.getModel().getValueAt(i, 0).toString().equals(type))
                found=true;
        }
        
        if(found==false)
            model.addRow(new Object[]{type, name, eq});
    }//GEN-LAST:event_jTableAllModelsMouseClicked

    private void jTableModelsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableModelsMouseClicked
        DefaultTableModel model = (DefaultTableModel) jTableModels.getModel();
        model.removeRow(jTableModels.getSelectedRow());
    }//GEN-LAST:event_jTableModelsMouseClicked

    private void jTableDecisionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDecisionsMouseClicked
        removeAllRowsTable(jTableModels);
        DefaultTableModel tableModel = (DefaultTableModel) jTableModels.getModel();
        Decision decision = admitProject.findDecision(jTableDecisions.getValueAt(jTableDecisions.getSelectedRow(), 0).toString());
        for(ModelParameter model: decision.getModels()){
            tableModel.addRow(new Object[]{model.getType(), model.getName(), model.getEquation().toString()});
        }
    }//GEN-LAST:event_jTableDecisionsMouseClicked

    private void jButtonTuneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTuneActionPerformed
        int min = Integer.parseInt(jTextFieldMinV.getText());
        int max = Integer.parseInt(jTextFieldMaxV.getText());
        double interval = (max - min) / 10;
        String selectedParam = jComboBoxParameters.getSelectedItem().toString();
        
        Decision decision = admitProject.findDecision(jTableDecisions.getValueAt(jTableDecisions.getSelectedRow(), 0).toString());
        decision.getModels().forEach(m -> m.clearPreviousTuning());
        removeAllRowsTable(jTableTotalBC);
        
        decision.tuneCostBenefitAnalysis(min , max, selectedParam);
        DefaultTableModel modelTable = (DefaultTableModel) jTableTotalBC.getModel();
        
        ArrayList<Double> values = new ArrayList<>();
        ArrayList<Integer> totalBenefits = new ArrayList<>();
        ArrayList<Integer> totalCosts = new ArrayList<>();
        
        for(int i=0; i<=10; i++){
            double val = min + interval*i;
            int totalCost=0;
            int totalBenefit=0;
            
            for(ModelParameter model: decision.getModels()){
                if(model.getType().equals("Cost")){
                    if(model.getEquation().getParameters().containsKey(selectedParam))
                        totalCost+= model.getEquation().tuneList.get(val);
                    else
                        totalCost+= model.getEquation().computeEquation();
                }
                else{
                    if(model.getEquation().getParameters().containsKey(selectedParam))
                        totalBenefit+= model.getEquation().tuneList.get(val);
                    else
                        totalBenefit+= model.getEquation().computeEquation();
                }
            }
            
            modelTable.addRow(new Object[]{val, totalBenefit, totalCost, (totalBenefit-totalCost)});
            values.add(val);
            totalBenefits.add(totalBenefit);
            totalCosts.add(totalCost);
        }
        
        jPanelChart.removeAll();
        LineChartAdmit lineChart = new LineChartAdmit(values, totalBenefits, totalCosts);
        
        javax.swing.GroupLayout jPanelChartLayout = new javax.swing.GroupLayout(jPanelChart);
        jPanelChart.setLayout(jPanelChartLayout);
        jPanelChartLayout.setHorizontalGroup(
            jPanelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelChartLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(lineChart.chartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );
        jPanelChartLayout.setVerticalGroup(
            jPanelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelChartLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(lineChart.chartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );
    }//GEN-LAST:event_jButtonTuneActionPerformed

    private void jTableModelsMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableModelsMouseMoved
        int row=jTableModels.rowAtPoint(evt.getPoint());
	int col=jTableModels.columnAtPoint(evt.getPoint());
	if(row>-1 && col>-1){
            Object value=jTableModels.getValueAt(row, col);
            if(null!=value && !"".equals(value))
                jTableModels.setToolTipText(value.toString());  //display cell content
            else
                jTableModels.setToolTipText(null);  //Close prompt
        }
    }//GEN-LAST:event_jTableModelsMouseMoved

    private void jTableAllModelsMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAllModelsMouseMoved
        int row=jTableAllModels.rowAtPoint(evt.getPoint());
	int col=jTableAllModels.columnAtPoint(evt.getPoint());
	if(row>-1 && col>-1){
            Object value=jTableAllModels.getValueAt(row, col);
            if(null!=value && !"".equals(value))
                jTableAllModels.setToolTipText(value.toString());   //display cell content
            else
                jTableAllModels.setToolTipText(null);  //Close prompt
        }
    }//GEN-LAST:event_jTableAllModelsMouseMoved

    /**
     * replace the last substring occurrence
     * @param string the whole string
     * @param toReplace the substring to replace
     * @param replacement with what to replace
     * @return 
     */
    public String replaceLast(String string, String toReplace, String replacement) {
        int pos = string.lastIndexOf(toReplace);
        if (pos > -1) {
            return string.substring(0, pos)
                 + replacement
                 + string.substring(pos + toReplace.length());
        } else {
            return string;
        }
    }
    
    /**
     * Remove all the row data of the table
     * @param table 
     */
    private void removeAllRowsTable(javax.swing.JTable table){
        DefaultTableModel dm = (DefaultTableModel) table.getModel();
        for(int i = dm.getRowCount() - 1; i>=0; i--){
            dm.removeRow(i);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddBenefit;
    private javax.swing.JButton jButtonAddCost;
    private javax.swing.JButton jButtonAnalysis;
    private javax.swing.JButton jButtonAnalyze;
    private javax.swing.JButton jButtonCreateCustomModel;
    private javax.swing.JButton jButtonCreateDecision;
    private javax.swing.JButton jButtonCreateModel;
    private javax.swing.JButton jButtonCustomParamAdd;
    private javax.swing.JButton jButtonCustomSymbAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonNewDecision;
    private javax.swing.JButton jButtonTune;
    private javax.swing.JComboBox<String> jComboBoxCustomType;
    private javax.swing.JComboBox<String> jComboBoxParameters;
    private javax.swing.JComboBox<String> jComboBoxSymbol;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelProfitLoss;
    private javax.swing.JLabel jLabelTotalBenefits;
    private javax.swing.JLabel jLabelTotalCosts;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanelChart;
    private javax.swing.JPanel jPanelCreateCustom;
    private javax.swing.JPanel jPanelModels;
    private javax.swing.JPanel jPanelModelsInputs;
    private javax.swing.JPanel jPanelNewDecision;
    private javax.swing.JPanel jPanelProvideV;
    private javax.swing.JPanel jPanelResults;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable jTableAllModels;
    private javax.swing.JTable jTableDecisions;
    private javax.swing.JTable jTableModels;
    private javax.swing.JTable jTableResultBenefitModel;
    private javax.swing.JTable jTableResultCostModel;
    private javax.swing.JTable jTableTotalBC;
    private javax.swing.JTextArea jTextAreaEq;
    private javax.swing.JTextField jTextDate;
    private javax.swing.JTextField jTextFieldCustomName;
    private javax.swing.JTextField jTextFieldMaxV;
    private javax.swing.JTextField jTextFieldMinV;
    private javax.swing.JTextField jTextFieldVar;
    private javax.swing.JTextField jTextName;
    // End of variables declaration//GEN-END:variables

    public class ForcedListSelectionModel extends DefaultListSelectionModel {
        public ForcedListSelectionModel () {
            setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        }
        @Override
        public void clearSelection() {
        }
        @Override
        public void removeSelectionInterval(int index0, int index1) {
        }
    }
}
