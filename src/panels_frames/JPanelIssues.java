/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels_frames;

import exa2pro.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Collections;
import javax.swing.DefaultListModel;

/**
 *
 * @author Nikos
 */
public class JPanelIssues extends javax.swing.JPanel {

    Project project;
    DefaultListModel<Issue> defaultListModel;
    
    /**
     * Creates new form JPanelIssues
     */
    public JPanelIssues(Project p) {
        project= p;
        initComponents();
        jLabelIssuesN.setText(project.getprojectReport().getTotalCodeSmells()+"");
        
        populateIssueList();
        addActionListennersToCheckBoxes();
    }

    //Populate List with Projects
    private void populateIssueList() {
        if(!Exa2Pro.projecCredentialstList.isEmpty()){
            defaultListModel= new DefaultListModel<>();
            Collections.sort(project.getprojectReport().getIssuesList());
            for(Issue i: project.getprojectReport().getIssuesList()){
                defaultListModel.addElement(i);
            }
            jListCodeSmells.setModel(defaultListModel);
            jListCodeSmells.setCellRenderer(new PanelIssueList());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelIssuesN = new javax.swing.JLabel();
        jLabelIssues = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListCodeSmells = new javax.swing.JList<>();
        jPanel5 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jCheckBoxFortran = new javax.swing.JCheckBox();
        jCheckBoxCpp = new javax.swing.JCheckBox();
        jCheckBoxOther = new javax.swing.JCheckBox();
        jCheckBoxC = new javax.swing.JCheckBox();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();

        jLabelIssuesN.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N

        jLabelIssues.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabelIssues.setText(" Issues");

        jListCodeSmells.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListCodeSmellsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListCodeSmells);

        jLabel19.setText("Language");

        jCheckBoxFortran.setSelected(true);
        jCheckBoxFortran.setText("Fortran");

        jCheckBoxCpp.setSelected(true);
        jCheckBoxCpp.setText("C++");

        jCheckBoxOther.setSelected(true);
        jCheckBoxOther.setText("Other");

        jCheckBoxC.setSelected(true);
        jCheckBoxC.setText("C");

        jLabel20.setText("File");

        jLabel21.setText("Rule");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxC)
                    .addComponent(jCheckBoxOther)
                    .addComponent(jCheckBoxCpp)
                    .addComponent(jCheckBoxFortran)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxFortran)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxCpp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxOther)
                .addGap(18, 18, 18)
                .addComponent(jLabel20)
                .addGap(26, 26, 26)
                .addComponent(jLabel21)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1147, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabelIssuesN)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabelIssues)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 988, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 567, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabelIssues)
                                .addComponent(jLabelIssuesN))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 243, Short.MAX_VALUE))
                        .addComponent(jScrollPane1))
                    .addGap(6, 6, 6)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jListCodeSmellsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListCodeSmellsMouseClicked
        Issue selectedIssue= jListCodeSmells.getSelectedValue();
        System.out.println("in "+selectedIssue.getIssueDirectory());
        System.out.println("from "+selectedIssue.getIssueStartLine()+ " till "+selectedIssue.getIssueEndLine());
        System.out.println(selectedIssue.getLinesOfCodeFromSonarQube());
    }//GEN-LAST:event_jListCodeSmellsMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBoxC;
    private javax.swing.JCheckBox jCheckBoxCpp;
    private javax.swing.JCheckBox jCheckBoxFortran;
    private javax.swing.JCheckBox jCheckBoxOther;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabelIssues;
    private javax.swing.JLabel jLabelIssuesN;
    private javax.swing.JList<Issue> jListCodeSmells;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    
    /*
    ** Check the file name for the Language
    */
    private boolean isLanguageC(String[] str){
         return (str[str.length-1].equalsIgnoreCase("c") || str[str.length-1].equalsIgnoreCase("h"));
    }
    private boolean isLanguageCpp(String[] str){
         return (str[str.length-1].equalsIgnoreCase("cpp") || str[str.length-1].equalsIgnoreCase("hpp"));
    }
    private boolean isLanguageFortran77(String[] str){
         return (str[str.length-1].equalsIgnoreCase("f") || str[str.length-1].equalsIgnoreCase("f77")
                        || str[str.length-1].equalsIgnoreCase("for") || str[str.length-1].equalsIgnoreCase("fpp")
                        || str[str.length-1].equalsIgnoreCase("ftn"));
    }
    private boolean isLanguageFortran90(String[] str){
         return (str[str.length-1].equalsIgnoreCase("F90"));
    }

    /*
    * Action Listener for the boxes
    */
    private void addActionListennersToCheckBoxes() {
        jCheckBoxFortran.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(jCheckBoxFortran.isSelected()){
            Collections.sort(project.getprojectReport().getIssuesList());
            for(Issue i: project.getprojectReport().getIssuesList()){
                String[] str= i.getIssueDirectory().split("\\.");
                if(isLanguageFortran77(str) || isLanguageFortran90(str)){
                    defaultListModel.addElement(i);
                }
            }
        }
        else{
            for(Issue i: project.getprojectReport().getIssuesList()){
                String[] str= i.getIssueDirectory().split("\\.");
                if(isLanguageFortran77(str) || isLanguageFortran90(str)){
                    defaultListModel.removeElement(i);
                }
            }
        }
            jLabelIssuesN.setText(defaultListModel.getSize()+"");
            }
        });
        jCheckBoxC.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(jCheckBoxC.isSelected()){
            Collections.sort(project.getprojectReport().getIssuesList());
            for(Issue i: project.getprojectReport().getIssuesList()){
                String[] str= i.getIssueDirectory().split("\\.");
                if(isLanguageC(str)){
                    defaultListModel.addElement(i);
                }
            }
        }
        else{
            for(Issue i: project.getprojectReport().getIssuesList()){
                String[] str= i.getIssueDirectory().split("\\.");
                if(isLanguageC(str)){
                    defaultListModel.removeElement(i);
                }
            }
        }
        jLabelIssuesN.setText(defaultListModel.getSize()+"");
            }
        });
        jCheckBoxCpp.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(jCheckBoxCpp.isSelected()){
            Collections.sort(project.getprojectReport().getIssuesList());
            for(Issue i: project.getprojectReport().getIssuesList()){
                String[] str= i.getIssueDirectory().split("\\.");
                if(isLanguageCpp(str)){
                    defaultListModel.addElement(i);
                }
            }
        }
        else{
            for(Issue i: project.getprojectReport().getIssuesList()){
                String[] str= i.getIssueDirectory().split("\\.");
                if(isLanguageCpp(str)){
                    defaultListModel.removeElement(i);
                }
            }
        }
        jLabelIssuesN.setText(defaultListModel.getSize()+"");
            }
        });
        jCheckBoxOther.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(jCheckBoxOther.isSelected()){
            Collections.sort(project.getprojectReport().getIssuesList());
            for(Issue i: project.getprojectReport().getIssuesList()){
                String[] str= i.getIssueDirectory().split("\\.");
                if(!isLanguageC(str) && !isLanguageCpp(str) && !isLanguageFortran90(str) && !isLanguageFortran77(str)){
                    defaultListModel.addElement(i);
                }
            }
        }
        else{
            for(Issue i: project.getprojectReport().getIssuesList()){
                String[] str= i.getIssueDirectory().split("\\.");
                if(!isLanguageC(str) && !isLanguageCpp(str) && !isLanguageFortran90(str) && !isLanguageFortran77(str)){
                    defaultListModel.removeElement(i);
                }
            }
        }
        jLabelIssuesN.setText(defaultListModel.getSize()+"");
            }
        });
    }
}
